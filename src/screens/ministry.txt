import React, from 'react';
import '../styles/Ministry.scss';



export default Carousel;






/*
import ImgComp from './ImgComp';


function Carousel() {
  const [x, setX] = useState(0);
  
  let sliderArr = [

    <ImgComp src="/img/Photo1.jpg" alt="I'm"/>,
    <ImgComp src="/img/Photo2.jpg" alt="having"/>,
    <ImgComp src="/img/Photo3.jpg" alt="many"/>,
    <ImgComp src="/img/Photo4.jpg" alt="issues"/>,
    <ImgComp src="/img/Photo5.jpg" alt="help!"/>
    
  ];
  

  const goLeft = () => {
      console.log(x);
      x=== 0 ? setX(-100 * (sliderArr.length - 1)) : setX(x + 100);
  };
  const goRight = () => {
      console.log(x);
    x=== -100 * (sliderArr.length - 1) ? setX(0) : setX(x - 100);
  };



return( //try render here 
  <div className="carousel">
        

    {sliderArr.map((item, index) => {
        return( 
           <div key={index} className="slide" /*style={{transform: translateX('${x}%'')}}  >
           {item}
           </div>
           );
  //transform: 
translate3d(${this.state.transform}px,0,0) try this too
      })}


      <button id="goLeft" onClick={goLeft}>previous button
      
      </button>
      
      <button id="goRight" onClick={goRight}>next button
     
      </button>


    
      </div>

);
}

<div>
  <h2>Header Here Try a link to page too!!!</h2>
<img src="/img/Photo1.jpg" alt="I'm"/>
</div>
<div>
  <h2>Header Here Try a link to page too!!!</h2>
<img src="/img/Photo2.jpg" alt="having"/>
</div><div>
  <h2>Header Here Try a link to page too!!!</h2>
<img src="/img/Photo3.jpg" alt="some"/>
</div><div>
  <h2>Header Here Try a link to page too!!!</h2>
<img src="/img/Photo4.jpg" alt="issues"/>
</div><div>
  <h2>Header Here Try a link to page too!!!</h2>
<img src="/img/Photo5.jpg" alt="here."/>
</div>







    


  {name: 'Photo 1',
 url: "https://images.pexels.com/photos/935944/pexels-photo-935944.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"},
 {name: 'Photo 2',
 url: "/photos/Community_Projectshttps://images.pexels.com/photos/2219024/pexels-photo-2219024.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260"},
 {name: 'Photo 3',
 url: "https://images.pexels.com/photos/976866/pexels-photo-976866.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"},
 {name: 'Photo 4',
 url: "https://images.pexels.com/photos/296301/pexels-photo-296301.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"},
 {name: 'Photo 5',
 url: "https://images.pexels.com/photos/576926/pexels-photo-576926.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"}

 */


.carousel {
  border: none;
  position: relative;
  width: 100%;
  height: 80vh;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  display: flex;
  align-items: center;
  background: none;
  overflow: hidden;
}

.slide {
  border: none;
  position: relative;
  min-width: 100%;
  height: 80vh;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  transition: 0.5s;
  overflow: hidden;
  
}

%btn-styles {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 5%;
  height: 80vh;
  background: none;
  border: none;
  outline: none;
}
#goLeft{
  left: 0;
  @extend %btn-styles;

}

#goRight{
  right: 0;
@extend %btn-styles;

}
 
import React from 'react';
import Carousel from 'react-multi-carousel';
import "../styles/Ministry.css";
import { render } from 'node-sass';

class Ministry extends React.Component{
responsive = {

  superLargeDesktop: {
    // the naming can be any, depends on you.
    breakpoint: { max: 4000, min: 3000 },
    items: 5
  },
  desktop: {
    breakpoint: { max: 3000, min: 1024 },
    items: 3
  },
  tablet: {
    breakpoint: { max: 1024, min: 464 },
    items: 2
  },
  mobile: {
    breakpoint: { max: 464, min: 0 },
    items: 1
  }
};
return(
<Carousel
  ssr={true}
  slidesToSlide={5}
  draggable={false}
  swipeable={false}
  arrows={true}
  infinite={true}
  keyBoardControl={true}
  autoPlay={true}
  autoPlaySpeed={3000}
  showDots={true}
  renderDotsOutside={false}
  focusOnSelect={true}
  centerMode={false}>
  
<div>
  <h2>Header Here Try a link to page too!!!</h2>
<img src="/img/Photo1.jpg" alt="I'm"/>
</div>
<div>
  <h2>Header Here Try a link to page too!!!</h2>
<img src="/img/Photo2.jpg" alt="having"/>
</div><div>
  <h2>Header Here Try a link to page too!!!</h2>
<img src="/img/Photo3.jpg" alt="some"/>
</div><div>
  <h2>Header Here Try a link to page too!!!</h2>
<img src="/img/Photo4.jpg" alt="issues"/>
</div><div>
  <h2>Header Here Try a link to page too!!!</h2>
<img src="/img/Photo5.jpg" alt="here."/>
</div>
</Carousel>

);
};


export default Ministry; 
import React, { Component } from "react";
import Carousel from "react-multi-carousel";

class Ministry extends Component {
  
    constructor(props) {
    super(props);
    this.containerRef = React.createRef();
    this.state = {
      // if domLoaded is true if means we are not longer at the server-side.
      domLoaded: false,
      // itemWidth will be the average width of our Carousel items
      // Its default to 0 as we don't have access to it at the beginning
      itemWidth: 0,
      // container width will be the total width of our entire Carousel component.
      containerWidth: 0,
      // slidesToShow will be the number of items we are showing to the user at a time.
      slidesToShow: 0,
      // slidesToSlide means how many slides we are sliding at a time.
      slidesToSlide: 1,
      // currentSlide is the current index of our arrow of Carousel items
      // which we are using later on in conjunction with the transform property.
      currentSlide: 0,
      // totalItems is the total number of Carousel items we have in the Carousel, this is done
      // by the React.Children api.
      totalItems: React.Children.count(props.children),
     
           // transform here will be used in conjunction with "translate3d"
      transform: 0,
      // breakpoint here is hard-coded for the sake of simplicity
      // for screen size that's larger than 900px, and smaller than 3000px, we are showing 3 items at the time.
      // at 500px to 900px screen size and at less than 500px screen size we are showing 2 items and one item repspectively
      breakpoint: {
        desktop: { min: 900, max: 3000, itemsToShow: 3 },
        tablet: { min: 500, max: 900, itemsToShow: 2 },
        mobile: { min: 0, max: 500, itemsToShow: 1 }
      }
    };
  }
  componentDidMount() {
    this.setState({ domLoaded: true });
    if (this.containerRef && this.containerRef.current) {
      //total width of the container
      this.setState({ containerWidth: this.containerRef.current.offsetWidth });
    }
    Object.keys(this.state.breakpoint).forEach(breakpoint => {
      const { min, max, itemsToShow } = this.state.breakpoint[breakpoint];
      if (window.innerWidth >= min && window.innerWidth <= max) {
        this.setState({ slidesToShow: itemsToShow });
      }
    });
  }

  next() {
    const { slidesToShow, slidesToSlide, containerWidth } = this.state;
    const itemWidth = containerWidth / slidesToShow;
    // the reason for the 1 is because our index starts at 0.
    const nextItems = this.state.currentSlide + 1 + slidesToShow;
    if (nextItems <= this.state.totalItems) {
      // if we are not reaching the end of the Carousel.
      const nextCarouselPosition =
        -itemWidth * (this.state.currentSlide + slidesToSlide);
      // notice that our nextCarouselPosition will be a nagative value
      this.setState({
        transform: nextCarouselPosition,
        currentSlide: this.state.currentSlide + slidesToSlide
      });
    } else {
      this.setState({
        transform: 0,
        currentSlide: 0
      });
    }
  }
  previous() {
    const { slidesToShow, slidesToSlide, containerWidth } = this.state;
    const itemWidth = containerWidth / slidesToShow;
    const previousItems = this.state.currentSlide - slidesToSlide;
    if (previousItems >= 0) {
      // if we are not passing the beginning of the Carousel.
      const nextCarouselPosition = -itemWidth * previousItems;
      this.setState({
        transform: nextCarouselPosition,
        currentSlide: previousItems
      });
    } else {
      const nextItems = this.state.totalItems - slidesToShow;
      const nextCarouselPosition = -itemWidth * nextItems;
      // otherwise, we want to go straight to the end of the Carousel to achieve the infinite effects.
      this.setState({
        transform: nextCarouselPosition,
        currentSlide: nextItems
      });
    }
  }
  render() {
    const { children } = this.props;
     return (
      <div
        style={{
          display: "flex",
          overflow: "hidden",
          position: "relative"
        }}
        ref={this.containerRef}
      >
        <Carousel>

<img src="/img/Photo1.jpg" alt="I'm"/>
<img src="/img/Photo2.jpg" alt="having"/>
<img src="/img/Photo3.jpg" alt="many"/>
<img src="/img/Photo4.jpg" alt="issues"/>
<img src="/img/Photo5.jpg" alt="help!"/>
</Carousel>
        <ul
          style={{
            listStyle: "none",
            padding: 0,
            margin: 0,
            display: "flex",
            alignItems: "center",
           
            transform: `translate3d(${this.state.transform}px,0,0)`
          }}
        >
          {React.Children.toArray(children).map((child, index) => (
            <li
              style={{
                flex: "auto",
                width: "auto"
              }}
              key={index}
            >
              {child}
            </li>
          ))}
        </ul>
        <button onClick={() => this.next()}>Next</button>
        <button onClick={() => this.previous()}>Previous</button>
      </div>
    );
 
  }

  }
export default Ministry;




good code below:
